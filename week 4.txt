Print the integers in the sorted order one by one in a single line followed by a space.

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main()
{
       int n,i;
    cin >> n;
    vector<int> numbers(n, 0);
    for(i = 0; i < n; i++)
    {
        cin >> numbers[i];
    }

    sort(numbers.begin(), numbers.end());

    for(i = 0; i < n; i++)
    {
        cout << numbers[i] << " ";
    }

    return 0;
}
====================================================================
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {

    int n,re,endpoint;
    cin>>n;
    vector<int>v;
    for(int i=0;i<n;i++)
    {
        int temp;
        cin>>temp;
        v.push_back(temp);
    }
    cin>>re;
    v.erase(v.begin()+re-1);
    cin>>re>>endpoint;
    v.erase(v.begin()+re-1,v.begin()+endpoint-1);

    cout<<v.size()<<endl;
    for(int i=0;i<v.size();i++)
    cout<<v[i]<<" ";

    return 0;
}


==============================================================
Write a C++ Program to demonstrates implementation of Stack in STL.

#include <iostream>
#include <stack>
#include <string>
#include <cstdlib>
using namespace std;
int main() {
   stack<int> s;
   int c, i;
   while (1) {
      cout<<"1.Size of the Stack"<<endl;
      cout<<"2.Insert Element into the Stack"<<endl;
      cout<<"3.Delete Element from the Stack"<<endl;
      cout<<"4.Top Element of the Stack"<<endl;
      cout<<"5.Exit"<<endl;
      cout<<"Enter your Choice: ";
      cin>>c;
      switch(c) {
         case 1:
            cout<<"Size of the stack: ";
            cout<<s.size()<<endl;
         break;
         case 2:
            cout<<"Enter value to be inserted: ";
            cin>>i;
            s.push(i);
         break;
         case 3:
            i = s.top();
            if (!s.empty()) {
               s.pop();
               cout<<i<<" Deleted"<<endl;
            }else {
               cout<<"Stack is Empty"<<endl;
            }
         break;
         case 4:
            cout<<"Top Element of the Stack: ";
            cout<<s.top()<<endl;
            break;
         case 5:
            exit(1);
         break;
         default:
            cout<<"Wrong Choice"<<endl;
      }
   }
   return 0;
}



=========================================================================
C++ program to demonstrate working of sort(), reverse(), max_element(), min_element()

#include <algorithm>
#include <iostream>
#include <vector>
#include <numeric> 
using namespace std;

int main()
{
	
	int arr[] = {10, 20, 5, 23 ,42 , 15};
	int n = sizeof(arr)/sizeof(arr[0]);
	vector<int> vect(arr, arr+n);

	cout << "Vector is: ";
	for (int i=0; i<n; i++)
		cout << vect[i] << " ";

	// Sorting the Vector 
	sort(vect.begin(), vect.end());

	cout << "\nVector after sorting is: ";
	for (int i=0; i<n; i++)
	cout << vect[i] << " ";

	// Reversing the Vector
	reverse(vect.begin(), vect.end());

	cout << "\nVector after reversing is: ";
	for (int i=0; i<6; i++)
		cout << vect[i] << " ";

	cout << "\nMaximum element of vector is: ";
	cout << *max_element(vect.begin(), vect.end());

	cout << "\nMinimum element of vector is: ";
	cout << *min_element(vect.begin(), vect.end());

	

	return 0;
}
======================================================================
implements maps and use functions to find upperbound and lower bound

#include <iostream>
#include <iterator>
#include <map>
using namespace std;

int main()
{


	map<int, int> m;

	// inserting elements
	m.insert(pair<int, int>(1, 40));
      m.insert(pair<int, int>(2, 30));
	m.insert(pair<int, int>(3, 60));
	m.insert(pair<int, int>(4, 20));
	m.insert(pair<int, int>(5, 50));
	m.insert(pair<int, int>(6, 50));
	m.insert(pair<int, int>(7, 10));


	map<int, int>::iterator itr;
	cout << "\nThe map m is : \n";
	cout << "\tKEY\tELEMENT\n";
	for (itr = m.begin(); itr !=m.end(); ++itr) {
		cout << '\t' << itr->first << '\t' << itr->second
			<< '\n';
	}
	cout << endl;


	cout << "m.lower_bound(5) : "
		<< "\tKEY = ";
	cout << m.lower_bound(5)->first << '\t';
	cout << "\tELEMENT = " << m.lower_bound(5)->second
		<< endl;
	cout << "m.upper_bound(7) : "
		<< "\tKEY = ";
	cout << m.upper_bound(7)->first << '\t';
	cout << "\tELEMENT = " << m.upper_bound(7)->second
		<< endl;

	return 0;
}
========================================================================
 .You are given  N integers.Sort the  N integers and print the sorted order.
Store the N integers in a vector.Vectors are sequence containers representing arrays that can change in size.

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
  
    int n;
    vector <int> v;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        int temp;
        cin>>temp;
        v.push_back(temp);
    }
    sort(v.begin(),v.end());
    for(int i=0;i<n;i++)
    cout<<v[i]<<" ";
    return 0;
}

